=======================
The Mesh Generation Program

Synopsis

make_model [options]

Description

The program reads an image in PNM format from standard input, generates
a mesh model in MODEL (Header + OFF) format, and writes the model to standard output.

USAGE:
In order to run make_model program, the input image must be in PNM/PPM/PGM format 
and specified from standard input, and the following command line interface option
must be specified:

    --density  (or --size  or --error): specify the target density or error

other options all have a default value or not necessary to be specified.

Note: by default, the initial mesh density is 100%. User can specify the initial 
density (or size) through the option: 

    --initial-density (or --initial-size, or --relative-initial-density)


SOME USAGE EXAMPLES:
1) use the MED method to generate the mesh for a grayscale/rgb image:

   $BINARY_DIR/src/make_model <input_image.pnm> output_model.model \
    --density 2 --initial-density 2 --initial-generator ed \
    --bad-point-removal 1 --ed-strategy-error-mode mirror \
    --ed-strategy max_comp_mmsodd_ed

2) use the MGPRFS method to generate the mesh for a grayscale/rgb image:

   $BINARY_DIR/src/make_model <input_image.pnm> output_model.model \
    --density 2 --relative-initial-density 400 --initial-generator ed \
    --bad-point-removal 0 --ed-initial-error-mode mirror \
    --ed-strategy max_comp_mmsodd_ed

3) use the ED method to generate a mesh for a grayscale image:
  
   $BINARY_DIR/src/make_model <input_image.pnm> output_model.model \
    --density 2 --initial-density 2 --initial-generator ed \
    --bad-point-removal 0 --ed-initial-error-mode zero

4) use the GPR method to generate the mesh for a grayscale image:

   $BINARY_DIR/src/make_model <input_image.pnm> output_model.model \
    --density 2 --initial-density 100 --initial-generator all \
    --bad-point-removal 0

5) use the GPRFS-ED method to generate the mesh for a grayscale image:

   $BINARY_DIR/src/make_model <input_image.pnm> output_model.model \
    --density 2 --relative-initial-density 400 --initial-generator ed \
    --bad-point-removal 0 --ed-initial-error-mode zero


NOTE: for any following option with a default value, it will be showed
in the bracket that appended after the option. E.g --debug-level arg (=0)
means debug level will have a default value of 0.


Details of each command line option:

Options:

  -h [ --help ]                         print help information only.
                                        
  --debug-level arg (=0)                set debug level.
                                        
  --history-file arg                    set history file.
                                        
  --history-level arg (=0)              set history level.
                                        
  --density arg                         specify target mesh sampling density 
                                        (in percent).
                                        
  --size arg                            specify target mesh size (in number of 
                                        samples).
                                        
  --error arg                           specify target mesh error threshold.
                                        
  --relative-initial-density arg        set the initial density that relative 
                                        to the target density. this will set 
                                        the initial mesh density as 
                                        relative_initial_density/ (density * 
                                        100).
                                        
  --initial-density arg (=100)          set initial mesh density (in percent).
                                        
  --initial-size arg                    specify initial mesh size (in number of
                                        samples).
                                        
  --mesh-generation-policy arg (=mcmg)  specify the method used for generating 
                                        the mesh. Note: This option can take 
                                        influence only when the input image is 
                                        a color image
                                        .valid options include:
                                        1. mcmg ... multi component mesh 
                                        generation. This will process multiple 
                                        components together by using the color 
                                        image mesh generator
                                        2. lsmg ... luma space mesh generation.
                                        This will convert the color image into 
                                        luma space first, then call the 
                                        grayscale image mesh generator to get a
                                        mesh, finally replace all sample point 
                                        values with color values in the mesh.
                                        
                                        
  --initial-generator arg (=ed)         specify the method used for generating 
                                        initial mesh point set.
                                        valid options include:
                                        1. all ........ Set all sample points 
                                        on the sampling grid as the initial 
                                        point set.
                                        2. random ..... Randomly select points 
                                        on the sampling grid as the initial 
                                        point set.
                                        3. uniform .... Uniformly select points
                                        on the sampling grid as the initial 
                                        point set.
                                        4. ed ......... Use error diffusion 
                                        method to select the initial point set.
                                        
  --ed-size-tolerance arg (=10)         specify the size tolerance of the mesh 
                                        that generated by the error diffusion 
                                        method. NOTE: This option can take 
                                        influence only when the 
                                        initial-generator is ed.
                                        
  --smooth-order arg (=3)               specify the smooth order of the 
                                        smoothing filter. NOTE: This option can
                                        take influence only when the 
                                        initial-generator is ed. The smooth 
                                        order must be a positive odd integer 
                                        value. If one, no smoothing will be 
                                        applied.
                                        
  --smooth-operator arg (=binomial)     specify the smoothing operator. Note: 
                                        this option can take influence only 
                                        when the initial-generator is ed.
                                        Valid options include:
                                        1. binomial ... use binomial filter.
                                        2. mean  ...... use mean filter.
                                        
  --smooth-direction arg (=both)        specify the smoothing direction. Note: 
                                        this option can take influence only 
                                        when the initial-generator is ed.
                                        Valid options include:
                                        1. orthogonal ... smooth on orthogonal 
                                        direction.
                                        2. both ... smooth on both horizontal 
                                        and vertical directions.
                                        
  --smooth-bound-policy arg (=zero_ext) specify the boundary handling policy 
                                        used for smoothing. NOTE: This option  
                                        can take influence only when the 
                                        initial-generator is ed.
                                        Valid options include:
                                        1. zero_ext ...... zero extension.
                                        2. const_ext ..... constant extension.
                                        3. sym_ext ....... symmetric extension.
                                        
  --derivative-bound-policy arg (=zero_ext)
                                        specify the boundary handling policy 
                                        used for partial derivative 
                                        computation. NOTE: This option can take
                                        influence only when the 
                                        initial-generator is ed.
                                        Valid options include:
                                        1. zero_ext ...... zero extension.
                                        2. const_ext ..... constant extension.
                                        3. sym_ext ....... symmetric extension.
                                        
  --use-double-convolution arg (=0)     specify if do smoothing and derivative 
                                        operations together in one convolution 
                                        or saperately in two convolution. valid
                                        options include 0 and 1.
                                        
                                        If 0, the program will do smoothing and
                                        derivative operations in a single 
                                        convolution. The boundary policy will 
                                        be based on the option 
                                        derivative-bound-policy at this time.
                                        
                                        If 1, the program will compute the 
                                        partial derivative by using two 
                                        convolution operations. Basically it 
                                        will smooth the image first using one 
                                        convolution and then do another 
                                        convolution with derivative filters.
                                        
                                        NOTE: This option can take influence 
                                        only when the initial-generator is ed.
                                        
  --ed-strategy arg (=max_comp_mmsodd_ed)
                                        specify the error diffusion strategy. 
                                        NOTE: this option can take influence 
                                        only when the initial-generator is ed. 
                                        When the input image is a color image, 
                                        each option corresponds to one color 
                                        error diffusion strategy; When the 
                                        input image is a grayscale image, if 
                                        gray_comp_laplacian_ed, or 
                                        mean_comp_laplacian_ed, or 
                                        max_comp_laplacian_ed is selected it 
                                        will take laplacian of the image as the
                                        density function, otherwise it will 
                                        take mmsodd of the image as the density
                                        function.
                                        Valid options include:
                                        
                                        1. gray_comp_mmsodd_ed ... convert the 
                                        color image to a grayscale image first,
                                        then use mmsodd of the grayscale image 
                                        as the density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        2. gray_comp_laplacian_ed ... convert 
                                        the color image to a grayscale image 
                                        first, then use laplacian of the 
                                        grayscale image as the density function
                                        and run Floyd-steinberg error diffusion
                                        method.
                                        
                                        3. vector_space_comb .... compute the 
                                        maximum directional gradient of the 
                                        vector space of R,G,B components as the
                                        density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        4. max_comp_mmsodd_ed ... compute the 
                                        max mmsodd of all components as the 
                                        density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        5. mean_comp_mmsodd_ed .. compute the 
                                        mean mmsodd of all components as the 
                                        density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        6. max_comp_laplacian_ed ... compute 
                                        the max laplacian of all components as 
                                        the density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        7. mean_comp_laplacian_ed .. compute 
                                        the mean laplacian of all components as
                                        the density function and run 
                                        Floyd-steinberg error diffusion method.
                                        
                                        8. three_comps_union_mmsodd .... 
                                        compute mmsodd of each component 
                                        separately and take as three density 
                                        functions; and run Floyd-steinberg 
                                        error diffusion method on each of R,G,B
                                        components and get the union set. The 
                                        result mesh will have desired number of
                                        points.
                                        
                                        9. three_comps_union_laplacian .... 
                                        compute laplacian of each component 
                                        separately and take as three density 
                                        functions; and run Floyd-steinberg 
                                        error diffusion method on each of R,G,B
                                        components and get the union set. The 
                                        result mesh will have desired number of
                                        points.
                                        
                                        
  --ed-scan-order arg (=serpentine)     specify the error diffusion scan order.
                                        NOTE: This option can take influence 
                                        only when the initial-generator is ed.
                                        Valid options include:
                                        1. raster ... raster scan order.
                                        2. serpentine ... serpentine scan 
                                        order.
                                        
  --ed-leaky-mode arg (=no_leaky)       specify the leaky mode for error 
                                        diffusion. NOTE: This can take 
                                        influence only when the 
                                        initial-generator is ed.
                                        Valid options include:
                                        1. leaky ...... leaky mode
                                        2. no_leaky ... no_leaky mode
                                        
  --ed-initial-error-mode arg (=mirror) specify the initial error mode for 
                                        error diffusion. NOTE: this can take 
                                        influence only when the 
                                        initial-generator is ed.
                                        Valid options include: 
                                        1. zero ..... initial errors are all 
                                        zero.
                                        2. random ... initial errors are 
                                        randomly generated.
                                        3. mirror ... initial errors are based 
                                        on doing Floyd-steinberg error 
                                        diffusion first on the mirror image of 
                                        the original image. Then take the 
                                        diffused errors on the last row as the 
                                        initial errors
                                        
  --error-metric arg (=mean_comp_se)    specify the error metric used to 
                                        compute face error.
                                        valid options include:
                                        1. mean_comp_se ... mean squared error 
                                        of all components.
                                        2. mean_comp_ae ... mean absolute error
                                        of all components.
                                        3. luma_se ........ luma space squared 
                                        error.
                                        4. luma_ae ........ luma space absolute
                                        error.
                                        5. ycbcr_vec_se ... YCbCr vector space 
                                        squared error.
                                        6. ycbcr_vec_ae ... YCbCr vector space 
                                        absolute error.
                                        7. vec_se ... vector absolute error.
                                        Note: for grayscale image, there is no 
                                        difference between every option of 
                                        *_se, they all have the same result 
                                        (i.g se). Same for *_ae.
                                        
  --bad-point-removal arg (=1)          0/1 to specify if to enable bad point 
                                        removal or not



=======================

The Mesh RASTERIZATION Program

In order to run the rasterize_model program, you can run one of the
following command:

   $BINARY_DIR/src/rasterize_model <input_model.model> recon_image.pnm

or

   $BINARY_DIR/src/rasterize_model -i input_model.model -o recon_image.pnm

